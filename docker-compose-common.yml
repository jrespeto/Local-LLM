

services:
  # redis db's
  # 0 - searxng
  # 1 - openwebui
  # 2 - n8n
  # 3 - augmentoolkit
  # 4 - langflow

  redis:
    container_name: redis
    hostname: redis
    profiles:
      - augmentoolkit
      - n8n
      - openwebui
      - searxng
      - langflow
    image: docker.io/valkey/valkey:8-alpine
    command: valkey-server --save 30 1 --loglevel warning
    #pull_policy: always
    restart: unless-stopped
    volumes:
      - redis-data:/data
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  qdrant:
    container_name: qdrant
    hostname: qdrant
    profiles:
      - langflow
      - openwebui
      - n8n
    image: docker.io/qdrant/qdrant
    #pull_policy: always
    restart: unless-stopped
    # environment:
    #   QDRANT__SERVICE__API_KEY: 69745b10-e341-11ef-9f72-37374b5983cd
    # ports so we can use the web ui
    ports:
      - "127.0.0.1:6333:6333"
      - "127.0.0.1:6334:6334"
    volumes:
      - qdrant:/qdrant/storage

  nginx:
    image: nginx:alpine
    container_name: nginx
    profiles:
      - langflow
      - openwebui
      - mcp
    depends_on:
    - mcp
    volumes:
    - ./data/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
    - "8081:80" # public entrypoint -> proxies to mcp

volumes:
  qdrant:
  redis-data:
