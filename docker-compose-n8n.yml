include:
  - docker-compose-common.yml
  - docker-compose-openwebui.yml

services:
  n8n:
    container_name: n8n
    hostname: n8n
    user: root
    profiles:
      - n8n
    image: docker.n8n.io/n8nio/n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    depends_on:
      - postgres-n8n
      - redis
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres-n8n
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8npassword
      - DB_POSTGRESDB_SCHEMA=public
      - N8N_ENCRYPTION_KEY=bc1tRVLqymCh3ardO27tBJPS34M/jhXf # copied from the volume
      - EXECUTIONS_MODE=queue
      - N8N_LOG_OUTPUT=console
      - N8N_LOG_LEVEL=debug
      - NODE_ENV=production
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_DB=2
      - EXECUTIONS_PROCESS=main
      - N8N_RUNNER_ENABLED=false
      - GENERIC_TIMEZONE=America/New_York
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_VERSION_NOTIFICATIONS_ENABLED=false
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
      - N8N_TEMPLATES_ENABLED=false
      - EXTERNAL_FRONTEND_HOOKS_URLS=
      - N8N_DIAGNOSTICS_CONFIG_FRONTEND=
      - N8N_DIAGNOSTICS_CONFIG_BACKEND=
      - N8N_ONBOARDING_FLOW_DISABLED=true
      - VUE_APP_URL_BASE_API=http://localhost:5678/
      # Allows usage of all builtin modules
      - NODE_FUNCTION_ALLOW_BUILTIN=*
      # Allows usage of only crypto
      - NODE_FUNCTION_ALLOW_BUILTIN=crypto
      # Allows usage of only crypto and fs
      - NODE_FUNCTION_ALLOW_BUILTIN=crypto,fs
      # Allow usage of external npm modules.
      - NODE_FUNCTION_ALLOW_EXTERNAL=moment,lodash
      # Webhooks - change this to your own domain for the loadbalancer to work.
      - WEBHOOK_URL=http://localhost:5678/
    volumes:
      - n8n_data:/home/node/.n8n

  n8n-worker1:
    user: root
    profiles:
      - n8n
    image: docker.n8n.io/n8nio/n8n
    command: worker --concurrency 5
    restart: unless-stopped
    depends_on:
      - postgres-n8n
      - redis
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres-n8n
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8npassword
      - DB_POSTGRESDB_SCHEMA=public
      - N8N_ENCRYPTION_KEY=bc1tRVLqymCh3ardO27tBJPS34M/jhXf # copied from the volume
      - EXECUTIONS_MODE=queue
      - N8N_RUNNER_ENABLED=true
      - N8N_LOG_OUTPUT=console
      - N8N_LOG_LEVEL=debug
      - NODE_ENV=production
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_DB=2
      - GENERIC_TIMEZONE=America/New_York
      - N8N_DIAGNOSTICS_ENABLED=false
      # - N8N_VERSION_NOTIFICATIONS_ENABLED=false
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
      # - N8N_TEMPLATES_ENABLED=false
      - EXTERNAL_FRONTEND_HOOKS_URLS=
      - N8N_DIAGNOSTICS_CONFIG_FRONTEND=
      - N8N_DIAGNOSTICS_CONFIG_BACKEND=
      - N8N_ONBOARDING_FLOW_DISABLED=true

  postgres-n8n:
    container_name: postgres-n8n
    hostname: postgres-n8n
    profiles:
      - n8n
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: n8npassword
      POSTGRES_DB: n8n
    volumes:
      - n8n-postgres:/var/lib/postgresql/data

volumes:
  n8n_data:
  n8n-postgres:
